import Head from 'next/head';
import Image from 'next/image';
import { DetailedHTMLProps } from 'react';
import PokeDex from "@/data/pokedex.json";
import { useState, useEffect } from 'react';
import styles from "@/styles/home.module.scss";
import { selectRandomFromArray, generateRandomNumber } from "@/util"

export default function Home() {

  const [Generation, setGeneration] = useState();
  const [CopyPokeDex, setPokedex] = useState([] as any);
  const [Darken, toggleDarken] = useState(false);
  const [blur, setBlur] = useState(0);
  const [Score, setScore] = useState(0);
  const [Time, setTime] = useState(0);
  const [TLSquare, setTLSquare] = useState(false)
  const [TRSquare, setTRSquare] = useState(false)
  const [BLSquare, setBLSquare] = useState(false)
  const [BRSquare, setBRSquare] = useState(false)
  const [Pokemon, setPokemon] = useState("" as any)


  function FilterPokeDex() {
    let pokedex: any = [];
    PokeDex.filter((pokemon: any, i) => {
      if (pokemon.is_default) {
        pokedex.push({ ...pokemon })
      }
    })

    setPokedex(pokedex);
  }

  function GeneratePokemon() {
    const Pokemon = selectRandomFromArray(CopyPokeDex);
    setPokemon(Pokemon)
  }

  const handleInput = (event:any) => {
    if(event.target.value === Pokemon.pokemon_name) {
      GeneratePokemon()

    }
  }

  useEffect(() => {
    FilterPokeDex()
  }, [])

  return (
    <>
      <Head>
        <title>Guess The Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <>
          <h1>Guess the Pokemon!</h1>

          <button onClick={() => { toggleDarken(!Darken) }}>Darken</button>
          <button onClick={() => { GeneratePokemon() }}>I dont know</button>

          {Pokemon &&
            <>

              <div>
                {TLSquare && <div className={`${styles.square} ${styles.topleft}`}> </div>}
                {TRSquare && <div className={`${styles.square} ${styles.topright}`}> </div>}
                {BLSquare && <div className={`${styles.square} ${styles.bottomleft}`}> </div>}
                {BRSquare && <div className={`${styles.square} ${styles.bottomright}`}> </div>}
                <Image className={`${Darken && styles.darken} ${blur === 25 && styles.blur25}`} src={`/pokemon/${Pokemon.pokemon_name.toLowerCase().replace(/ /g, "_")}.png`} alt={`${Pokemon.primary_color} pokemon its shape is a ${Pokemon.shape}.`} width={150} height={150} />
              </div>
              <input onChange={handleInput}/>
            </>
          }
          {/* {CopyPokeDex && CopyPokeDex.map((pokemon: any, i: number) => (
            <div key={i}>
              <h4>{pokemon.pokemon_name}</h4>
              {TLSquare && <div className={`${styles.square} ${styles.topleft}`}> </div>}
              {TRSquare && <div className={`${styles.square} ${styles.topright}`}> </div>}
              {BLSquare && <div className={`${styles.square} ${styles.bottomleft}`}> </div>}
              {BRSquare && <div className={`${styles.square} ${styles.bottomright}`}> </div>}
              <Image className={`${Darken && styles.darken} ${blur === 25 && styles.blur25}`} src={`/pokemon/${pokemon.pokemon_name.toLowerCase().replace(/ /g, "_")}.png`} alt={`${pokemon.primary_color} pokemon its shape is a ${pokemon.shape}.`} width={150} height={150}/>
            </div>
          ))
          } */}


        </>
      </main>
    </>
  )
}
